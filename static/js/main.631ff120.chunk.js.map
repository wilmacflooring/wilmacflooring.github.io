{"version":3,"sources":["screens/Home/Home.tsx","screens/About/About.tsx","screens/Contact/Contact.js","screens/Gallery/Gallery.tsx","screens/Products/Products.tsx","components/UI/NotFound.tsx","components/GoogleAnalytics.tsx","components/UI/NavigationBar.tsx","components/UI/Footer.tsx","components/HomepageLayout.tsx","screens/Root.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["images","original","thumbnail","originalAlt","thumbnailAlt","ScreensHome","Helmet","name","content","className","Container","Row","Col","items","showBullets","ScreensAbout","cloudName","publicId","secure","quality","fetchFormat","alt","crop","ScreensContact","ScreensGallery","href","rel","target","ScreensProducts","NotFound","GoogleAnalytics","this","logPageChange","props","location","pathname","search","prevLocation","isDifferentPathname","isDifferentSearch","page","window","ReactGA","set","origin","options","pageview","Component","component","initialize","process","NavigationBar","toggle","setState","isOpen","state","activeItem","Navbar","color","light","expand","NavbarBrand","aspectRatio","gravity","radius","width","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","tag","ReactRouterNavLink","to","exact","activeClassName","React","Footer","Date","getFullYear","HomepageLayout","children","ScreensRoot","basename","GA","path","App","Boolean","hostname","match","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.631ff120.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\n// import ProjectGroup from '../../components/Project/Group';\r\nimport './Home.css';\r\n\r\nconst images = [\r\n    {\r\n        original:\r\n            'https://res.cloudinary.com/wilmacflooring/image/upload/c_scale/c_scale,f_auto,q_auto/cropped-StairsTop_ywk1mh',\r\n        thumbnail:\r\n            'https://res.cloudinary.com/wilmacflooring/image/upload/t_media_lib_thumb/v1598209117/cropped-StairsTop_ywk1mh.png',\r\n        originalAlt: 'Beautiful tile work done by Wilmac Flooring.',\r\n        thumbnailAlt: 'Beautiful tile work done by Wilmac Flooring.',\r\n    },\r\n    {\r\n        original: 'https://res.cloudinary.com/wilmacflooring/image/upload/c_scale/c_scale,f_auto,q_auto/entry_gwynom',\r\n        thumbnail:\r\n            'https://res.cloudinary.com/wilmacflooring/image/upload/c_thumb,w_200,g_face/v1598720714/entry_gwynom.png',\r\n        originalAlt: 'Incredible Entryway with custom centered tile.',\r\n        thumbnailAlt: 'Incredible Entryway with custom centered tile.',\r\n    },\r\n    {\r\n        original:\r\n            'https://res.cloudinary.com/wilmacflooring/image/upload/c_scale/c_scale,f_auto,q_auto/floorAndTile_ydxzih',\r\n        thumbnail:\r\n            'https://res.cloudinary.com/wilmacflooring/image/upload/c_thumb,w_200,g_face/v1598720714/floorAndTile_ydxzih.png',\r\n        originalAlt: 'Beautiful wood floors and tile combined together. Work by Wilmac Flooring.',\r\n        thumbnailAlt: 'Beautiful wood floors and tile combined together. Work by Wilmac Flooring.',\r\n    },\r\n];\r\n\r\n/* eslint-disable react/no-multi-comp */\r\n/* Heads up! ScreensHome uses inline styling, however it's not the best practice. Use CSS or styled components for\r\n * such things.\r\n * @TODO: Remove the inline styling everywhere\r\n */\r\nconst ScreensHome: FunctionComponent = () => (\r\n    <div>\r\n        {/* Defining the Page title, meta, description */}\r\n        <Helmet>\r\n            <title>Wilmac Flooring - Home</title>\r\n            <meta name=\"description\" content=\"Contains the featured projects of Wilmac Flooring.\" />\r\n            {/* TODO: Add subject content for SEO. */}\r\n            <meta name=\"subject\" content=\"Technology Portfolio\" />\r\n        </Helmet>\r\n        <h1>Latest Work</h1>\r\n        <div className=\"Home\">\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <ImageGallery items={images} showBullets={true} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n        {/* <div>\r\n            <h2>\r\n                <a>Visit our Photo Gallery</a>\r\n            </h2>\r\n        </div> */}\r\n    </div>\r\n);\r\n\r\nexport default ScreensHome;\r\n","import React, { FunctionComponent } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Image, Transformation } from 'cloudinary-react';\r\nimport './About.css';\r\n\r\nconst ScreensAbout: FunctionComponent = () => {\r\n    return (\r\n        <div className=\"About\">\r\n            <Helmet>\r\n                <title>Wilmac Flooring - About Us</title>\r\n                <meta name=\"description\" content=\"About Page for Wilmac Flooring.\" />\r\n                <meta name=\"subject\" content=\"About\" />\r\n            </Helmet>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h1>About Us</h1>\r\n                        <br />\r\n                        <h3>What sets Wilmac Flooring apart</h3>\r\n                        <p>\r\n                            Wilmac Flooring is a customer-focused, quality-driven, family-owned company with more than\r\n                            40 years of experience. The company opened its doors in 1979 under the name of Carnegie Tile\r\n                            and Carpet in Carnegie, Pennsylvania. In 1982, the name was changed to Wilmac Flooring to\r\n                            reflect the sole ownership of William McGrath. Since then, the company has moved locations\r\n                            twice while remaining loyal to its roots in the Carnegie business district. In 2003, the\r\n                            second generation joined the company with the addition of Tim McGrath. In 2010, Wilmac\r\n                            Flooring expanded its current location while restoring the showroom and storefront.\r\n                        </p>\r\n                        <h4>Our Services</h4>\r\n                        <p>\r\n                            Flooring for residential, commercial, new construction, remodeling projects and all of your\r\n                            custom design needs.\r\n                        </p>\r\n                        <h4>Our Goal</h4>\r\n                        <p>\r\n                            Our goal is to assist in your dream project by providing you with friendly, knowledgeable\r\n                            experience and quality craftsmanship for a stress-free job.\r\n                        </p>\r\n                        <h4>Our Values</h4>\r\n                        <p>\r\n                            Wilmac Flooring believes in Old World business values where customers are guaranteed quality\r\n                            products and excellent craftsmanship with attention to detail and personal client\r\n                            interaction. Wilmac Flooring offers a unique shopping experience where clients receive\r\n                            private, one-on-one studio time. Our newly renovated showroom offers an expansive selection\r\n                            of materials, which allows us to accommodate your artistic creation or custom dream project.\r\n                        </p>\r\n                        <br />\r\n                        <h3>Meet Tim McGrath</h3>\r\n                        <Image\r\n                            cloudName=\"wilmacflooring\"\r\n                            publicId=\"WillTim_ych8rm\"\r\n                            secure={true}\r\n                            quality=\"auto\"\r\n                            fetchFormat=\"auto\"\r\n                            alt=\"Wilmac Flooring Logo\"\r\n                        >\r\n                            <Transformation crop=\"scale\" />\r\n                        </Image>\r\n\r\n                        <br />\r\n                        <p>\r\n                            <i>Insert a quick write-up of Tim Here with a different picture. </i>\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScreensAbout;\r\n","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport './Contact.css';\r\n\r\nconst ScreensContact = () => (\r\n    <div>\r\n        {/* Defining the Page title, meta, description */}\r\n        <Helmet>\r\n            <title>Wilmac Flooring - Contact</title>\r\n            <meta name=\"description\" content=\"Contact Page for Wilmac Flooring.\" />\r\n            {/* TODO: Add subject to your SEO */}\r\n            <meta name=\"subject\" content=\"Contact\" />\r\n        </Helmet>\r\n        <div>Contact page</div>\r\n        {/* <Container>\r\n            <Grid inverted stackable>\r\n                <Grid.Row>\r\n                    <Grid.Column width={16}>\r\n                        <Header inverted as=\"h1\">\r\n                            Contact\r\n                        </Header>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Grid.Column width={16} className=\"Contact-contactinfo\">\r\n                        <blockquote>\r\n                            <p>\r\n                                Feel free to reach out with any questions or inquiries. Please do not send spam or try\r\n                                to advertise any services to me.\r\n                            </p>\r\n                        </blockquote>\r\n                        <Header inverted as=\"h3\">\r\n                            Email\r\n                        </Header>\r\n                        <p>\r\n                            <a href=\"mailto:rusticsanta@hotmail.com\">rusticsanta@hotmail.com</a>\r\n                        </p>\r\n                        <Header inverted as=\"h3\">\r\n                            LinkedIn\r\n                        </Header>\r\n                        <p>\r\n                            <a href=\"https://www.linkedin.com/in/MattJonesCreation/\">\r\n                                linkedin.com/in/MattJonesCreation\r\n                            </a>\r\n                        </p>\r\n                        <Header inverted as=\"h3\">\r\n                            Github\r\n                        </Header>\r\n                        <p>\r\n                            <a href=\"https://github.com/MattJonesCreation\">github.com/MattJonesCreation</a>\r\n                        </p> \r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        </Container> */}\r\n    </div>\r\n);\r\n\r\nexport default ScreensContact;\r\n","import React, { FunctionComponent } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nconst ScreensGallery: FunctionComponent = () => {\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Wilmac Flooring - Gallery</title>\r\n                <meta name=\"description\" content=\"Gallery for Wilmac Flooring.\" />\r\n                <meta name=\"subject\" content=\"Gallery\" />\r\n            </Helmet>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h1>Photo Gallery</h1>\r\n                        <h2>By Room</h2>\r\n                        <p>\r\n                            <a\r\n                                href=\"https://www.flickr.com/photos/wilmac/sets/72157629007281247\"\r\n                                rel=\"noopener noreferrer\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                Accents and Features\r\n                            </a>\r\n                        </p>\r\n                        <p>\r\n                            <a\r\n                                href=\"https://www.flickr.com/photos/wilmac/sets/72157629007254369\"\r\n                                rel=\"noopener noreferrer\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                Backsplashes\r\n                            </a>\r\n                        </p>\r\n                        <p>\r\n                            <a\r\n                                href=\"https://www.flickr.com/photos/wilmac/sets/72157629007415455\"\r\n                                rel=\"noopener noreferrer\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                Bathrooms and Showers\r\n                            </a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"https://flic.kr/s/aHsjygcV7c\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                Entrys\r\n                            </a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"https://flic.kr/s/aHsjygcTAe\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                Fireplaces\r\n                            </a>\r\n                        </p>\r\n                        <p>\r\n                            <a href=\"https://flic.kr/s/aHsjygcTAe\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                Stairs\r\n                            </a>\r\n                        </p>\r\n                        <h2>By Material</h2>\r\n                        <p>\r\n                            <a\r\n                                href=\"https://www.flickr.com/photos/wilmac/sets/72157629007397515\"\r\n                                rel=\"noopener noreferrer\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                Stone and Tile\r\n                            </a>\r\n                        </p>\r\n                        <p>\r\n                            <a\r\n                                href=\"https://www.flickr.com/photos/wilmac/sets/72157629007385565\"\r\n                                rel=\"noopener noreferrer\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                Hard Wood\r\n                            </a>\r\n                        </p>\r\n                        <p>\r\n                            <a\r\n                                href=\"https://www.flickr.com/photos/wilmac/albums\"\r\n                                rel=\"noopener noreferrer\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                View All\r\n                            </a>\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScreensGallery;\r\n","import React, { FunctionComponent } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nconst ScreensProducts: FunctionComponent = () => {\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Wilmac Flooring - Our Products</title>\r\n                <meta name=\"description\" content=\"Out Products page for Wilmac Flooring.\" />\r\n                <meta name=\"subject\" content=\"Products\" />\r\n            </Helmet>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h1>Our Products</h1>\r\n                        <p>Dal-Tile</p>\r\n                        <p>Mannington</p>\r\n                        <p>Marazzi</p>\r\n                        <p>Anderson Floors</p>\r\n                        <p>Mullican Flooring</p>\r\n                        <p>Bella Cera Floors</p>\r\n                        <p>Karndean</p>\r\n                        <p>Nova</p>\r\n                        <p>We Cork</p>\r\n                        <p>US Floors LLC</p>\r\n                        <p>Quick Step</p>\r\n                        <p>Tile Gallery PA</p>\r\n                        <p>Shaw Floors</p>\r\n                        <p>BR1-11</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScreensProducts;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nconst NotFound: FunctionComponent = () => {\r\n    return (\r\n        <div>\r\n            <h2>Page not found</h2>\r\n            <h3>{\"We're sorry, we couldn't find the page you requested\"}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","// utils/GoogleAnalytics.js\r\nimport React, { Component } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport { Route } from 'react-router-dom';\r\n\r\ninterface ILocation {\r\n    pathname: string;\r\n    search: string;\r\n}\r\n\r\ninterface IGAProps {\r\n    location: ILocation;\r\n    options: Record<string, unknown>;\r\n}\r\n\r\nclass GoogleAnalytics extends Component<IGAProps> {\r\n    componentDidMount(): void {\r\n        this.logPageChange(this.props.location.pathname, this.props.location.search);\r\n    }\r\n\r\n    componentDidUpdate({ location: prevLocation }: IGAProps): void {\r\n        const {\r\n            location: { pathname, search },\r\n        } = this.props;\r\n        const isDifferentPathname = pathname !== prevLocation.pathname;\r\n        const isDifferentSearch = search !== prevLocation.search;\r\n\r\n        if (isDifferentPathname || isDifferentSearch) {\r\n            this.logPageChange(pathname, search);\r\n        }\r\n    }\r\n\r\n    logPageChange(pathname: string, search = ''): void {\r\n        const page = pathname + search;\r\n        const { location } = window;\r\n        ReactGA.set({\r\n            page,\r\n            location: `${location.origin}${page}`,\r\n            ...this.props.options,\r\n        });\r\n        ReactGA.pageview(page);\r\n    }\r\n\r\n    render(): null {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst RouteTracker: () => JSX.Element = () => <Route component={GoogleAnalytics} />;\r\n\r\nconst init: () => boolean = () => {\r\n    const isGAEnabled = process.env.NODE_ENV === 'production';\r\n\r\n    if (isGAEnabled) {\r\n        ReactGA.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS);\r\n    }\r\n\r\n    return isGAEnabled;\r\n};\r\n\r\nexport default {\r\n    GoogleAnalytics,\r\n    RouteTracker,\r\n    init,\r\n};\r\n","import React from 'react';\r\nimport { NavLink as ReactRouterNavLink } from 'react-router-dom';\r\nimport { Container, Row, Col, Collapse, Navbar, NavbarToggler, Nav, NavItem, NavLink, NavbarBrand } from 'reactstrap';\r\nimport { Image, Transformation } from 'cloudinary-react';\r\nimport './NavigationBar.css';\r\n\r\ninterface IState {\r\n    activeItem: number;\r\n    isOpen: boolean;\r\n}\r\n\r\nclass NavigationBar extends React.Component<unknown, IState> {\r\n    constructor(props: unknown) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen: false,\r\n            activeItem: 0,\r\n        };\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NavigationBar\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Navbar color=\"fixed\" light expand=\"md\">\r\n                                <NavbarBrand href=\"/\">\r\n                                    <div>\r\n                                        <Image\r\n                                            cloudName=\"wilmacflooring\"\r\n                                            publicId=\"IMG_2550_wpodlk\"\r\n                                            secure={true}\r\n                                            quality=\"auto\"\r\n                                            fetchFormat=\"auto\"\r\n                                            alt=\"Wilmac Flooring Logo\"\r\n                                        >\r\n                                            <Transformation\r\n                                                aspectRatio=\"1:1\"\r\n                                                gravity=\"auto\"\r\n                                                radius=\"max\"\r\n                                                width=\"63\"\r\n                                                crop=\"fill\"\r\n                                            />\r\n                                        </Image>{' '}\r\n                                        WILMAC FLOORING\r\n                                    </div>\r\n                                </NavbarBrand>\r\n                                <NavbarToggler onClick={this.toggle} />\r\n                                <Collapse isOpen={this.state.isOpen} navbar>\r\n                                    <Nav className=\"mr-auto\" navbar>\r\n                                        <NavItem>\r\n                                            <NavLink\r\n                                                tag={ReactRouterNavLink}\r\n                                                to=\"/\"\r\n                                                exact={true}\r\n                                                name=\"home\"\r\n                                                activeClassName=\"active\"\r\n                                            >\r\n                                                Home\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink\r\n                                                tag={ReactRouterNavLink}\r\n                                                to=\"/about\"\r\n                                                name=\"about\"\r\n                                                activeClassName=\"active\"\r\n                                            >\r\n                                                About Us\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink\r\n                                                tag={ReactRouterNavLink}\r\n                                                to=\"/products\"\r\n                                                name=\"products\"\r\n                                                activeClassName=\"active\"\r\n                                            >\r\n                                                Our Products\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink\r\n                                                tag={ReactRouterNavLink}\r\n                                                to=\"/gallery\"\r\n                                                name=\"gallery\"\r\n                                                activeClassName=\"active\"\r\n                                            >\r\n                                                Photo Gallery\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                    </Nav>\r\n                                </Collapse>\r\n                            </Navbar>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavigationBar;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { FaFacebook } from 'react-icons/fa';\r\nimport './Footer.css';\r\n\r\nconst Footer: FunctionComponent = () => {\r\n    return (\r\n        <div className=\"Footer\">\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <i>All content is copyright © {new Date().getFullYear()} Wilmac Flooring.</i>\r\n                    </Col>\r\n                    <Col>\r\n                        <div className=\"float-right\">\r\n                            <a href=\"https://www.facebook.com/pages/category/Home-Improvement/Wilmac-Flooring-368533426579825/\">\r\n                                <FaFacebook />\r\n                            </a>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { ReactNode, FunctionComponent } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n// import Header from './UI/Header';\r\nimport NavigationBar from './UI/NavigationBar';\r\nimport Footer from './UI/Footer';\r\nimport './HomepageLayout.css';\r\n\r\ninterface ILayoutProps {\r\n    children: ReactNode;\r\n}\r\n\r\nconst HomepageLayout: FunctionComponent<ILayoutProps> = (props: ILayoutProps) => (\r\n    <div>\r\n        {/* <Header /> */}\r\n        <NavigationBar />\r\n        <Container className=\"MainContainer\">\r\n            <Row>\r\n                <Col>{props.children}</Col>\r\n            </Row>\r\n        </Container>\r\n        <Footer />\r\n    </div>\r\n);\r\n\r\nexport default HomepageLayout;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport ScreensHome from './Home/Home';\r\nimport ScreensAbout from './About/About';\r\nimport ScreensContact from './Contact/Contact';\r\nimport ScreensGallery from './Gallery/Gallery';\r\nimport ScreensProducts from './Products/Products';\r\nimport NotFound from 'src/components/UI/NotFound';\r\n\r\nimport GA from 'src/components/GoogleAnalytics';\r\nimport HomepageLayout from 'src/components/HomepageLayout';\r\n\r\nconst ScreensRoot: () => JSX.Element = () => (\r\n    <Router basename=\"/\">\r\n        {/* Initialize Google Analytics and managing document title, description, and meta */}\r\n        {GA.init() && <GA.RouteTracker />}\r\n        <HomepageLayout>\r\n            {/* Main Content Routing Pages */}\r\n            <Switch>\r\n                <Route path=\"/\" exact component={ScreensHome} />\r\n                <Route path=\"/about/\" component={ScreensAbout} />\r\n                <Route path=\"/contact/\" component={ScreensContact} />\r\n                <Route path=\"/products/\" component={ScreensProducts} />\r\n                <Route path=\"/gallery/\" component={ScreensGallery} />\r\n                <Route path=\"*\" component={NotFound} />\r\n                {/* <Route path=\"/products/\" component={ScreensProducts} /> */}\r\n            </Switch>\r\n        </HomepageLayout>\r\n    </Router>\r\n);\r\n\r\nexport default ScreensRoot;\r\n","import React from 'react';\r\nimport ScreensRoot from 'src/screens/Root';\r\nimport './App.css';\r\n\r\nfunction App(): JSX.Element {\r\n    return <ScreensRoot />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import './polyfills';\r\nimport React from 'react';\r\nimport { render } from 'react-snapshot';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nrender(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}